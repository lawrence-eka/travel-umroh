yalla.framework.addComponent("/dist/user/myProfile",function(){function ComponentEvent(type,data,target,currentTarget){this.data=data,this.target=target,this.type=type,this.currentTarget=currentTarget}function initState(props){return{}}function onPropertyChange(event){}function initState(props){return{editedUserId:props.editedUserId,error:{message:""}}}function onPropertyChange(props){props.editedUserId&&(this.state.editedUserId=props.editedUserId.newValue)}function getMyProfile(){var self=this;return new Promise(function(resolve){self.state.editedUserId?dpd.users.get(self.state.editedUserId,function(user,err){resolve(user)}):dpd.users.me(function(me){me||(storage.me.erase(),window.location.hash="#app"),resolve(me)})})}function onCancel(){window.location.hash="#app/search-package.home"}function onSave(profile){profile=profile.data;var self=this;dpd.users.put(profile.id,profile,function(user,err){err?(self.state.error.message=err,$patchChanges()):(storage.me.save(user,storage.me.isRemembered()),window.location.hash="#app/search-package.home")})}function $render(_props,_slotView){_context.profile=$inject("/user/userProfile");_context.profile;_elementOpenStart("div",""),_attr("element","dist.user.myProfile"),_elementOpenEnd("div");var _component=IncrementalDOM.currentElement(),_validComponent=yalla.framework.validComponentName(_component,_elementName);_component._state=_component._state&&_validComponent?_component._state:initState.bind(_component)(_props),_component._state._name=_elementName;var _state=_component._state,_self={component:_component,properties:_props,state:_component._state};_validComponent&&yalla.framework.propertyCheckChanges(_component._properties,_props,onPropertyChange.bind(_self)),_component._properties=_props,function(domNode){function asyncFunc_1(data){var _params={profile:data,onsave:function(event){var self={target:event.target};self.properties=_props,"elements"in self.target&&(self.elements=self.target.elements),self.currentTarget=this==event.target?self.target:_parentComponent(event.currentTarget),self.component=_component,self.component._state=self.component._state||{},self.state=self.component._state,self.emitEvent=function(eventName,data){var event=new ComponentEvent(eventName,data,self.target,self.currentTarget);"on"+eventName in _props&&_props["on"+eventName](event)},onSave.bind(self)(event)},oncancel:function(event){var self={target:event.target};self.properties=_props,"elements"in self.target&&(self.elements=self.target.elements),self.currentTarget=this==event.target?self.target:_parentComponent(event.currentTarget),self.component=_component,self.component._state=self.component._state||{},self.state=self.component._state,self.emitEvent=function(eventName,data){var event=new ComponentEvent(eventName,data,self.target,self.currentTarget);"on"+eventName in _props&&_props["on"+eventName](event)},onCancel.bind(self)()},error:_state.error.message};_context.profile.render("object"==typeof arguments[1]?_merge(arguments[1],_params):_params,function(slotName,slotProps){})}var node=domNode.element,self={target:node};self.properties=_props,"elements"in self.target&&(self.elements=self.target.elements),self.currentTarget=self.target,self.component=_component,self.component._state=self.component._state||{},self.state=self.component._state;var promise=getMyProfile.bind(self)();promise&&"object"==typeof promise&&"then"in promise?(_skip(),promise.then(function(_result){$patchChanges(node,function(){asyncFunc_1.call(self,_result)})}).catch(function(err){console.log(err)})):asyncFunc_1.call(self,promise)}({element:IncrementalDOM.currentElement(),pointer:IncrementalDOM.currentPointer()}),_elementClose("div")}var $patchChanges=yalla.framework.renderToScreen,$inject=yalla.framework.createInjector("/dist/user/myProfile"),$export={},_elementName="dist.user.myProfile",_context={},_parentComponent=yalla.framework.getParentComponent,_merge=yalla.utils.merge,_elementClose=(IncrementalDOM.elementOpen,IncrementalDOM.elementClose),_elementOpenStart=IncrementalDOM.elementOpenStart,_elementOpenEnd=IncrementalDOM.elementOpenEnd,_attr=(IncrementalDOM.elementVoid,IncrementalDOM.text,IncrementalDOM.attr),_skip=IncrementalDOM.skip;return"function"==typeof $render&&($export.render=$render),$export}());