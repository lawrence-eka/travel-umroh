yalla.framework.addComponent("/dist/common/dates.js___jb_tmp", (function() {
  var $path = "/dist/common/dates.js___jb_tmp";
  var $patchChanges = yalla.framework.renderToScreen;
  var $storeRef = yalla.framework.storeRef;
  var $export = {};
  var $context = {};
  var $patchRef = yalla.framework.patchRef;
  var $inject = yalla.framework.createInjector("/dist/common/dates.js___jb_tmp");
  $export = {
    formatter: function(dte, asComponents) {
      if (!dte || isNaN(dte.getTime())) {
        if (asComponents) return undefined;
        else return "";
      }

      var dt = dte.getDate();
      var mo = "JanFebMarAprMayJunJulAugSepOctNovDec".substr(dte.getMonth() * 3, 3);
      var yr = dte.getFullYear();
      if (asComponents) return {
        "date": dt,
        "month": mo,
        "year": yr
      };
      else return dt.toString() + " " + mo + " " + yr.toString();
    },
    rangePrettifier: function(startDate, endDate) {
      s = this.formatter(startDate, true);
      e = this.formatter(endDate, true);

      if (!s && !e) return "";
      else if (s && (!e)) return s.date.toString() + " " + s.month + " " + s.year.toString();
      else if ((!s) && e) return e.date.toString() + " " + e.month + " " + e.year.toString();
      else if (s.date == e.date && s.month == e.month && s.year == e.year) return s.date.toString() + " " + s.month + " " + s.year.toString();
      else if (s.month == e.month && s.year == e.year) return s.date.toString() + "-" + e.date.toString() + " " + s.month + " " + s.year.toString();
      else if (s.year == e.year) return s.date.toString() + " " + s.month + "-" + e.date.toString() + " " + e.month + " " + s.year.toString();
      else return s.date.toString() + " " + s.month + " " + s.year.toString() + "-" + e.date.toString() + " " + e.month + " " + e.year.toString();
    }

  }


  if (typeof $render === "function") {
    $export.render = $render;
  }
  return $export;
})());