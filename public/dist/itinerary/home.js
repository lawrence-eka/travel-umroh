yalla.framework.addComponent("/dist/itinerary/home",function(){function ComponentEvent(type,data,target,currentTarget){this.data=data,this.target=target,this.type=type,this.currentTarget=currentTarget}function initState(){return{}}function onPropertyChange(){}function initState(props){return{packageId:props.packageId,entryType:"",editItineraryId:null,alert:new Alert,isEditMode:!1}}function getPackage(){var self=this;return new Promise(function(resolve){dpd.packages.get(self.state.packageId,function(result){resolve(result)})})}function onCloseEdit(){this.state.editItineraryId=null,this.state.isEditMode=!1,$patchChanges()}function onAddItinerary(entryType){this.state.editItineraryId=null,this.state.isEditMode=!0,this.state.entryType=entryType,$patchChanges()}function onEditItinerary(itineraryId){this.state.editItineraryId=itineraryId.data,this.state.isEditMode=!0,$patchChanges()}function onDeleteItinerary(itineraryId){dpd.itineraries.del(itineraryId.data,function(){$patchChanges()})}function $render(_props){_context.panel=$inject("/component/panel"),_context.panel,_context.entry=$inject("/component/entry"),_context.entry,_context.list=$inject("/itinerary/list"),_context.list,_context["edit-itinerary"]=$inject("/itinerary/edit-itinerary"),_context["edit-itinerary"],_elementOpenStart("div",""),_attr("element","dist.itinerary.home"),_elementOpenEnd("div");var _component=IncrementalDOM.currentElement(),_validComponent=yalla.framework.validComponentName(_component,_elementName);_component._state=_component._state&&_validComponent?_component._state:initState.bind(_component)(_props),_component._state._name=_elementName;var _state=_component._state,_self={component:_component,properties:_props,state:_component._state};_validComponent&&yalla.framework.propertyCheckChanges(_component._properties,_props,onPropertyChange.bind(_self)),_component._properties=_props,function(domNode){function asyncFunc_1(data){if(_state.isEditMode&&(_params={onclose:function(event){var self={target:event.target};self.properties=_props,"elements"in self.target&&(self.elements=self.target.elements),self.currentTarget=this==event.target?self.target:_parentComponent(event.currentTarget),self.component=_component,self.component._state=self.component._state||{},self.state=self.component._state,self.emitEvent=function(eventName,data){var event=new ComponentEvent(eventName,data,self.target,self.currentTarget);"on"+eventName in _props&&_props["on"+eventName](event)},onCloseEdit.bind(self)(event)},itineraryId:_state.editItineraryId,entryType:_state.entryType,packageId:_state.packageId},_context["edit-itinerary"].render("object"==typeof arguments[1]?_merge(arguments[1],_params):_params,function(){})),!_state.isEditMode){_elementOpenStart("span",""),_elementOpenEnd("span"),_params={title:data.packageName,nofooter:"nofooter"},_context.panel.render("object"==typeof arguments[1]?_merge(arguments[1],_params):_params,function(slotName){if("body"===slotName){_elementOpenStart("div",""),_elementOpenEnd("div"),_params={type:"button",value:"Add Transport",onclick:function(event){var self={target:event.target};self.properties=_props,"elements"in self.target&&(self.elements=self.target.elements),self.currentTarget=this==event.target?self.target:_parentComponent(event.currentTarget),self.component=_component,self.component._state=self.component._state||{},self.state=self.component._state,self.emitEvent=function(eventName,data){var event=new ComponentEvent(eventName,data,self.target,self.currentTarget);"on"+eventName in _props&&_props["on"+eventName](event)},onAddItinerary.bind(self)("Transport")}},_context.entry.render("object"==typeof arguments[1]?_merge(arguments[1],_params):_params,function(){});var _params={type:"button",value:"Add Hotel",onclick:function(event){var self={target:event.target};self.properties=_props,"elements"in self.target&&(self.elements=self.target.elements),self.currentTarget=this==event.target?self.target:_parentComponent(event.currentTarget),self.component=_component,self.component._state=self.component._state||{},self.state=self.component._state,self.emitEvent=function(eventName,data){var event=new ComponentEvent(eventName,data,self.target,self.currentTarget);"on"+eventName in _props&&_props["on"+eventName](event)},onAddItinerary.bind(self)("Hotel")}};_context.entry.render("object"==typeof arguments[1]?_merge(arguments[1],_params):_params,function(){}),_elementClose("div")}});var _params={packageId:_state.packageId,oneditItinerary:function(event){var self={target:event.target};self.properties=_props,"elements"in self.target&&(self.elements=self.target.elements),self.currentTarget=this==event.target?self.target:_parentComponent(event.currentTarget),self.component=_component,self.component._state=self.component._state||{},self.state=self.component._state,self.emitEvent=function(eventName,data){var event=new ComponentEvent(eventName,data,self.target,self.currentTarget);"on"+eventName in _props&&_props["on"+eventName](event)},onEditItinerary.bind(self)(event)},ondeleteItinerary:function(event){var self={target:event.target};self.properties=_props,"elements"in self.target&&(self.elements=self.target.elements),self.currentTarget=this==event.target?self.target:_parentComponent(event.currentTarget),self.component=_component,self.component._state=self.component._state||{},self.state=self.component._state,self.emitEvent=function(eventName,data){var event=new ComponentEvent(eventName,data,self.target,self.currentTarget);"on"+eventName in _props&&_props["on"+eventName](event)},onDeleteItinerary.bind(self)(event)}};_context.list.render("object"==typeof arguments[1]?_merge(arguments[1],_params):_params,function(){}),_elementClose("span")}}var node=domNode.element,self={target:node};self.properties=_props,"elements"in self.target&&(self.elements=self.target.elements),self.currentTarget=self.target,self.component=_component,self.component._state=self.component._state||{},self.state=self.component._state;var promise=getPackage.bind(self)();promise&&"object"==typeof promise&&"then"in promise?(_skip(),promise.then(function(_result){$patchChanges(node,function(){asyncFunc_1.call(self,_result)})}).catch(function(){})):asyncFunc_1.call(self,promise)}({element:IncrementalDOM.currentElement(),pointer:IncrementalDOM.currentPointer()}),_elementClose("div")}var $patchChanges=yalla.framework.renderToScreen,$inject=yalla.framework.createInjector("/dist/itinerary/home"),$export={},_elementName="dist.itinerary.home",_context={},_parentComponent=yalla.framework.getParentComponent,_merge=yalla.utils.merge,_elementClose=(IncrementalDOM.elementOpen,IncrementalDOM.elementClose),_elementOpenStart=IncrementalDOM.elementOpenStart,_elementOpenEnd=IncrementalDOM.elementOpenEnd,_attr=(IncrementalDOM.elementVoid,IncrementalDOM.text,IncrementalDOM.attr),_skip=IncrementalDOM.skip;return"function"==typeof $render&&($export.render=$render),$export}());